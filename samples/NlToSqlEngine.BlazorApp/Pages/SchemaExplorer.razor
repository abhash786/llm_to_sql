@page "/schema-explorer"
@using NlToSqlEngine.MCP
@inject IMcpToolsService McpTools

<PageTitle>Schema Explorer</PageTitle>

<h1><i class="fas fa-sitemap me-3"></i>Database Schema Explorer</h1>
<p class="lead text-muted">Explore your database structure interactively</p>

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-database me-2"></i>Schemas & Tables</h5>
            </div>
            <div class="card-body" style="max-height: 600px; overflow-y: auto;">
                @if (isLoading)
                {
                    <div class="text-center p-4">
                        <div class="spinner-border" role="status"></div>
                        <div class="mt-2">Loading schema...</div>
                    </div>
                }
                else if (schemas?.Any() == true)
                {
                    @foreach (var schema in schemas)
                    {
                        <div class="mb-3">
                            <h6 class="text-primary">
                                <i class="fas fa-folder me-2"></i>@schema.SchemaName
                            </h6>
                            @if (tablesBySchema.ContainsKey(schema.SchemaName))
                            {
                                @foreach (var table in tablesBySchema[schema.SchemaName])
                                {
                                    <button class="btn btn-outline-secondary btn-sm d-block mb-1 text-start"
                                            @onclick="() => SelectTable(table)">
                                        <i class="fas fa-table me-2"></i>@table.TableName
                                    </button>
                                }
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <div class="col-md-8">
        @if (selectedTable != null)
        {
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-table me-2"></i>@selectedTable.SchemaName.@selectedTable.TableName</h5>
                </div>
                <div class="card-body">
                    <!-- Table Stats -->
                    @if (tableStats != null)
                    {
                        <div class="row mb-4">
                            <div class="col-md-3">
                                <div class="card bg-primary text-white">
                                    <div class="card-body text-center">
                                        <h4>@tableStats.RowCount.ToString("N0")</h4>
                                        <small>Rows</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-success text-white">
                                    <div class="card-body text-center">
                                        <h4>@(tableColumns?.Count ?? 0)</h4>
                                        <small>Columns</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-info text-white">
                                    <div class="card-body text-center">
                                        <h4>@tableStats.TotalKB.ToString("N0")</h4>
                                        <small>KB</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-warning text-white">
                                    <div class="card-body text-center">
                                        <h4>@(foreignKeys?.Count ?? 0)</h4>
                                        <small>Foreign Keys</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#columns">
                                <i class="fas fa-columns me-2"></i>Columns
                            </button>
                        </li>
                        <li class="nav-item">
                            <button class="nav-link" data-bs-toggle="tab" data-bs-target="#sample-data">
                                <i class="fas fa-eye me-2"></i>Sample Data
                            </button>
                        </li>
                        <li class="nav-item">
                            <button class="nav-link" data-bs-toggle="tab" data-bs-target="#relationships">
                                <i class="fas fa-link me-2"></i>Relationships
                            </button>
                        </li>
                    </ul>

                    <div class="tab-content mt-3">
                        <!-- Columns Tab -->
                        <div class="tab-pane fade show active" id="columns">
                            @if (tableColumns?.Any() == true)
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Column Name</th>
                                                <th>Data Type</th>
                                                <th>Nullable</th>
                                                <th>Max Length</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var column in tableColumns)
                                            {
                                                <tr>
                                                    <td>
                                                        <strong>@column.ColumnName</strong>
                                                        @if (column.ColumnName.EndsWith("Id"))
                                                        {
                                                            <span class="badge bg-primary ms-2">ID</span>
                                                        }
                                                    </td>
                                                    <td><code>@column.DataType</code></td>
                                                    <td>
                                                        @if (column.IsNullable)
                                                        {
                                                            <span class="badge bg-success">YES</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-danger">NO</span>
                                                        }
                                                    </td>
                                                    <td>@column.CharacterMaximumLength</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                        </div>

                        <!-- Sample Data Tab -->
                        <div class="tab-pane fade" id="sample-data">
                            @if (sampleData?.Any() == true)
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                @foreach (var key in sampleData.First().Keys.Take(6))
                                                {
                                                    <th>@key</th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var record in sampleData)
                                            {
                                                <tr>
                                                    @foreach (var kvp in record.Take(6))
                                                    {
                                                        <td>@kvp.Value</td>
                                                    }
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else if (selectedTable != null)
                            {
                                <div class="text-center p-4">
                                    <i class="fas fa-database fa-3x text-muted mb-3"></i>
                                    <p class="text-muted">No sample data available or table is empty</p>
                                </div>
                            }
                        </div>

                        <!-- Relationships Tab -->
                        <div class="tab-pane fade" id="relationships">
                            @if (foreignKeys?.Any() == true)
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Column</th>
                                                <th>References</th>
                                                <th>Referenced Column</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var fk in foreignKeys)
                                            {
                                                <tr>
                                                    <td><strong>@fk.ColumnName</strong></td>
                                                    <td>@fk.ReferencedSchema.@fk.ReferencedTable</td>
                                                    <td>@fk.ReferencedColumn</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="text-center p-4">
                                    <i class="fas fa-unlink fa-3x text-muted mb-3"></i>
                                    <p class="text-muted">No foreign key relationships found</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-body text-center p-5">
                    <i class="fas fa-mouse-pointer fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Select a table to explore its structure</h5>
                    <p class="text-muted">Choose a table from the left panel to view its columns, sample data, and relationships.</p>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<SchemaInfo>? schemas;
    private Dictionary<string, List<TableReference>> tablesBySchema = new();
    private TableReference? selectedTable;
    private List<ColumnDescription>? tableColumns;
    private TableStatistics? tableStats;
    private List<ForeignKeyRelation>? foreignKeys;
    private List<Dictionary<string, object>>? sampleData;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadSchemaData();
    }

    private async Task LoadSchemaData()
    {
        try
        {
            isLoading = true;
            schemas = await McpTools.ListSchemasAsync();
            var allTables = await McpTools.ListTablesAsync();

            tablesBySchema = allTables
                .GroupBy(t => t.SchemaName)
                .ToDictionary(g => g.Key, g => g.ToList());
        }
        catch (Exception ex)
        {
            // Handle error - could show error message
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task SelectTable(TableReference table)
    {
        selectedTable = table;
        tableColumns = null;
        tableStats = null;
        foreignKeys = null;
        sampleData = null;

        try
        {
            var tableName = $"{table.SchemaName}.{table.TableName}";

            // Load table details sequentially to avoid type issues
            tableColumns = await McpTools.DescribeTableAsync(tableName);
            tableStats = await McpTools.GetTableStatsAsync(tableName);
            foreignKeys = await McpTools.GetForeignKeysAsync(tableName);
            sampleData = await McpTools.SampleRowsAsync(tableName, 10);
        }
        catch (Exception ex)
        {
            // Handle error - could show error message
        }

        StateHasChanged();
    }
}